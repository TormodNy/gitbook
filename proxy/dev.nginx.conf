server {
  listen 8080;
  server_name localhost;
  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen 8443 ssl http2;
  server_name localhost;
  ssl_certificate /run/secrets/localhost.pem;
  ssl_certificate_key /run/secrets/localhost-key.pem;
  root /;

  location /oauth2 {
    proxy_pass http://oauth2:4180;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Auth-Request-Redirect $request_uri;
  }
  location = /oauth2/auth {
    proxy_pass http://oauth2:4180;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Uri $request_uri;
    # nginx auth_request includes headers but not body
    proxy_set_header Content-Length "";
    proxy_pass_request_body off;
  }

  location /api {
    proxy_pass https://api.github.com;
    rewrite ^/api(.*)$ $1 break;

    auth_request /oauth2/auth;
    error_page 401 = /oauth2/sign_in;

    auth_request_set $access_token $upstream_http_x_auth_request_access_token;
    proxy_set_header Authorization "Bearer $access_token";
  }

  location / {
    proxy_pass http://spa:3000/;

    auth_request /oauth2/auth;
    error_page 401 = /oauth2/sign_in;

    # if you enabled --cookie-refresh, this is needed for it to work with auth_request
    auth_request_set $auth_cookie $upstream_http_set_cookie;
    add_header Set-Cookie $auth_cookie;

    # Handle websockets used for hot reload
    proxy_ssl_session_reuse on;
    proxy_set_header Host $host;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}
